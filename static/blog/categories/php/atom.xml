<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: php | blog.youyo.info]]></title>
  <link href="http://blog.youyo.info/blog/categories/php/atom.xml" rel="self"/>
  <link href="http://blog.youyo.info/"/>
  <updated>2015-07-06T13:15:44+09:00</updated>
  <id>http://blog.youyo.info/</id>
  <author>
    <name><![CDATA[youyo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[cake phpで作られたサイトのホスト名変えたときのエラー対応]]></title>
    <link href="http://blog.youyo.info/blog/2014/05/14/transfer-cake-php-site/"/>
    <updated>2014-05-14T09:21:00+09:00</updated>
    <id>http://blog.youyo.info/blog/2014/05/14/transfer-cake-php-site</id>
    <content type="html"><![CDATA[<p>cake phpで作られたサイトを別サーバに移して、ホスト名変更しました。<br/>
するとブラウザは真っ白。。ログにはこんなエラーが。。。</p>

<p><code>
PHP Fatal error:  Class 'Dispatcher' not found in /PATH/TO/app/webroot/index.php on line 87
</code></p>

<p>Dispatcherが定義されているファイルはちゃんと読み込まれてるっぽいのになぜ？？<br/>
と悩みググりまくってたら回答ありました。<br/>
キャッシュファイルを消せばいいらしいです。</p>

<p><code>
rm -rf app/tmp/cache/*
</code></p>

<p>これで無事サイト表示できるようになりました！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php5.4の環境にAPCをインストールしてみた]]></title>
    <link href="http://blog.youyo.info/blog/2013/03/26/apc-3-dot-1-14/"/>
    <updated>2013-03-26T17:21:00+09:00</updated>
    <id>http://blog.youyo.info/blog/2013/03/26/apc-3-dot-1-14</id>
    <content type="html"><![CDATA[<p>php5.4の環境にAPCをインストールしてみました。APCは3.1.10以降でphp5.4系をサポートしたそうなのでそれを満たすバージョンで。phpのときのようにrpm作成してサクッとインストールします。</p>

<h3>環境</h3>

<ul>
<li>CentOS 6.3 x86_64</li>
<li>PHP 5.4.11</li>
<li>APC 3.1.14</li>
</ul>


<p><a href="http://blog.youyo.info/blog/2013/02/12/server-build-log/#N6">※ php5.4のインストールはこちら！</a></p>

<h3>作成</h3>

<ul>
<li>rpmbuild用のユーザー作成 ＆ rpmbuild ＆ Install</li>
</ul>


<p>SRPMはremiさんのところからいただきました。</p>

<p><code>
sudo useradd rpmdevel
sudo su - rpmdevel
mkdir -p ~/rpm/{BUILD,SRPMS,SPECS,SOURCES,RPMS}
echo "%_topdir $HOME/rpm" &gt; $HOME/.rpmmacros
mkdir src
cd src/
wget http://rpms.famillecollet.com/SRPMS/php-pecl-apc-3.1.14-1.remi.src.rpm
rpm -ivh php-pecl-apc-3.1.14-1.remi.src.rpm
cd ../rpm/SPECS/
rpmbuild -v -ba --clean php-pecl-apc.spec
yum localinstall php-pecl-apc-3.1.14-1.el6.x86_64.rpm php-pecl-apc-devel-3.1.14-1.el6.x86_64.rpm
</code></p>

<!--more-->


<ul>
<li>確認 ＆ Service Restart</li>
</ul>


<p><code>php -i |grep apc</code>でいろいろ表示されればok.</p>

<p><code>
php -i |grep apc
service php-fpm restart
</code></p>

<p><code>sh "php -i |grep apc"
Additional .ini files parsed =&gt; /etc/php.d/apc.ini,
apc
MMAP File Mask =&gt; /tmp/apc.XXXXXX
apc.cache_by_default =&gt; On =&gt; On
apc.canonicalize =&gt; Off =&gt; Off
apc.coredump_unmap =&gt; Off =&gt; Off
apc.enable_cli =&gt; Off =&gt; Off
apc.enabled =&gt; On =&gt; On
apc.file_md5 =&gt; Off =&gt; Off
apc.file_update_protection =&gt; 2 =&gt; 2
apc.filters =&gt; no value =&gt; no value
apc.gc_ttl =&gt; 3600 =&gt; 3600
apc.include_once_override =&gt; Off =&gt; Off
apc.lazy_classes =&gt; Off =&gt; Off
apc.lazy_functions =&gt; Off =&gt; Off
apc.max_file_size =&gt; 1M =&gt; 1M
apc.mmap_file_mask =&gt; /tmp/apc.XXXXXX =&gt; /tmp/apc.XXXXXX
apc.num_files_hint =&gt; 1024 =&gt; 1024
apc.preload_path =&gt; no value =&gt; no value
apc.report_autofilter =&gt; Off =&gt; Off
apc.rfc1867 =&gt; Off =&gt; Off
apc.rfc1867_freq =&gt; 0 =&gt; 0
apc.rfc1867_name =&gt; APC_UPLOAD_PROGRESS =&gt; APC_UPLOAD_PROGRESS
apc.rfc1867_prefix =&gt; upload_ =&gt; upload_
apc.rfc1867_ttl =&gt; 3600 =&gt; 3600
apc.serializer =&gt; default =&gt; default
apc.shm_segments =&gt; 1 =&gt; 1
apc.shm_size =&gt; 64M =&gt; 64M
apc.shm_strings_buffer =&gt; 4M =&gt; 4M
apc.slam_defense =&gt; On =&gt; On
apc.stat =&gt; On =&gt; On
apc.stat_ctime =&gt; Off =&gt; Off
apc.ttl =&gt; 7200 =&gt; 7200
apc.use_request_time =&gt; On =&gt; On
apc.user_entries_hint =&gt; 4096 =&gt; 4096
apc.user_ttl =&gt; 7200 =&gt; 7200
apc.write_lock =&gt; On =&gt; On
</code></p>

<h3>まとめ</h3>

<ul>
<li>サクッとできた(´ω`)</li>
<li><code>apc.shm_size</code>が<code>/etc/php.ini</code>の<code>memory_limit</code>よりも大きいとエラーなるらしいので注意。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nginx+php-fpmでphpMyAdminを動かす]]></title>
    <link href="http://blog.youyo.info/blog/2013/02/13/phpmyadmin-nginx/"/>
    <updated>2013-02-13T23:17:00+09:00</updated>
    <id>http://blog.youyo.info/blog/2013/02/13/phpmyadmin-nginx</id>
    <content type="html"><![CDATA[<ul>
<li><a href="#N0">phpmyadmin設置</a></li>
<li><a href="#N1">php-fpm設定</a></li>
<li><a href="#N2">nginx設定</a></li>
<li><a href="#N3">nginxでphpのセッションを扱えるようにしておく</a></li>
</ul>


<br>


<h3><a id="N0">phpmyadmin設置</a></h3>

<p>適当にダウンロードしてきて適当に設置。</p>

<p>``` sh
cd /usr/local/src/
sudo wget http://downloads.sourceforge.net/project/phpmyadmin/phpMyAdmin/3.5.6/phpMyAdmin-3.5.6-all-languages.tar.gz?r=http%3A%2F%2Fwww.phpmyadmin.net%2Fhome_page%2Fdownloads.php&amp;ts=1360757374&amp;use_mirror=jaist
sudo tar xvzf phpMyAdmin-3.5.6-all-languages.tar.gz
sudo mv phpMyAdmin-3.5.6-all-languages /var/www/phpMyAdmin
sudo chown -R nginx:nginx /var/www/phpMyAdmin/</p>

<h2>```</h2>

<!--more-->




<br><br>


<h3><a id="N1">php-fpm設定</a></h3>

<p>confファイルを作成してphp-fpm起動。</p>

<p><code>sh
cd /etc/php-fpm.d/
sudo vim phpMyAdmin.conf
sudo /etc/init.d/php-fpm start
</code></p>

<p>``` sh /etc/php-fpm.d/phpMyAdmin.conf
[phpMyAdmin]
listen = /var/run/php-fpm/phpMyAdmin.socket
;listen.backlog = -1
listen.allowed_clients = 127.0.0.1
listen.owner = nginx
listen.group = nginx
;listen.mode = 0666
user = nginx
group = nginx
pm = dynamic
pm.max_children = 20
pm.start_servers = 5
pm.min_spare_servers = 4
pm.max_spare_servers = 5
pm.max_requests = 100
;pm.status_path = /status
;ping.path = /ping
;ping.response = pong
;request_terminate_timeout = 0
;request_slowlog_timeout = 0
slowlog = /var/log/php-fpm/phpMyAdmin-slow.log
;rlimit_files = 1024
;rlimit_core = 0
;chroot =
;chdir = /var/www
;catch_workers_output = yes
;security.limit_extensions = .php .php3 .php4 .php5
;env[HOSTNAME] = $HOSTNAME
;env[PATH] = /usr/local/bin:/usr/bin:/bin
;env[TMP] = /tmp
;env[TMPDIR] = /tmp
;env[TEMP] = /tmp
;php_admin_value[sendmail_path] = /usr/sbin/sendmail -t -i -f www@my.domain.com
;php_flag[display_errors] = off
php_admin_value[error_log] = /var/log/php-fpm/phpMyAdmin-error.log
php_admin_flag[log_errors] = on
;php_admin_value[memory_limit] = 32M</p>

<h2>```</h2>

<br><br>


<h3><a id="N2">nginx設定</a></h3>

<p>適当にconf書いて起動。<br/>
redirectとかアクセス制限とかも適当に。</p>

<p><code>sh
cd /etc/nginx/conf.d/
sudo vim phpMyAdmin.conf
sudo nginx -t
sudo /etc/init.d/nginx restart
</code></p>

<p>``` sh /etc/nginx/conf.d/phpMyAdmin.conf
server {
  listen 80;
  server_name your.webserver;
  root /var/www;</p>

<p>  location / {</p>

<pre><code>rewrite ^(.*)$ http://blog.youyo.info$1 permanent;
</code></pre>

<p>  }</p>

<p>  location /phpMyAdmin {</p>

<pre><code>index index.php;

allow   myIP;
deny    all;
</code></pre>

<p>  }</p>

<p>  location ~ .php$ {</p>

<pre><code>fastcgi_pass   unix:/var/run/php-fpm/phpMyAdmin.socket;
fastcgi_index  index.php;
fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
include        fastcgi_params;
</code></pre>

<p>  }</p>

<p>  location ~ /.ht {</p>

<pre><code>deny all;
</code></pre>

<p>  }
}</p>

<h2>```</h2>

<br><br>


<h3><a id="N3">nginxでphpのセッションを扱えるようにしておく</a></h3>

<p>デフォルトapacheな感じでnginxユーザーだとパーミッション許可されてないので許可しておく。(念のためです)</p>

<p>``` sh
sudo ls -l /var/lib/php/
合計 4
drwxrwx--- 2 root apache 4096  2月 12 16:23 2013 session</p>

<p>sudo chown nginx /var/lib/php/session/</p>

<h2>```</h2>

<br><br>


<p>あとはhttp://your.webserver/phpMyAdmin/にアクセスできるようになってるはずなので、適当にGUIから設定して終了。</p>

<ul>
<li>nginxのalias設定意味わかんね(結局使わなかった)</li>
<li>"File Not Found"のエラーはもう見たくない</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mysql5.6+php5.4+nginxな環境を作る(インストールのみ)]]></title>
    <link href="http://blog.youyo.info/blog/2013/02/12/server-build-log/"/>
    <updated>2013-02-12T20:16:00+09:00</updated>
    <id>http://blog.youyo.info/blog/2013/02/12/server-build-log</id>
    <content type="html"><![CDATA[<p>今までVPS2Gプランを借りていたのですが、ちょっとした家計の事情でより安い1Gプランに移ることにしました。んで。せっかくなのでmysql5.6な環境作りたいな〜っと思いまして、ついでにphpも5.4にして毎回忘れるVDAパッチ済みのpostfixもつくっとこうってことでやりました。<br/>
以下いつも通りやったことです。今回はインストール作業のみで設定ファイル編集とかは基本的にやってないです。</p>

<h2>環境とインストールしたもの</h2>

<ul>
<li>CentOS 6.3 x86_64</li>
<li><a href="#N1">Minimal Install &amp; ユーザ追加</a></li>
<li><a href="#N2">初期設定</a></li>
<li><a href="#N3">rbenv install</a></li>
<li><a href="#N4">dnsmasq2.48 install</a></li>
<li><a href="#N5">mysql5.6 install</a></li>
<li><a href="#N6">php5.4 install</a></li>
<li><a href="#N7">nginx1.2.6 install</a></li>
<li><a href="#N8">postfix2.9.5+VDAパッチ install</a></li>
<li><a href="#N9">dovecot2.0.9 install</a></li>
</ul>


<!--more-->




<br>


<br>


<h3><a id="N1">Minimal Install &amp; ユーザ追加</a></h3>

<p>普通にOSインストールしてユーザ追加です。</p>

<p>```</p>

<h1>useradd xxxx</h1>

<h1>su - xxxx</h1>

<p>$ ssh-keygen -t rsa
$ cat .ssh/id_rsa.pub > .ssh/authorized_keys
$ chmod 400 .ssh/authorized_keys</p>

<h1>sed -ie "s/#PermitRootLogin yes/PermitRootLogin no/" /etc/ssh/sshd_config</h1>

<h1>echo -e "AllowUsers\txxxx" >> /etc/ssh/sshd_config</h1>

<h1>/etc/init.d/sshd restart</h1>

<h2>```</h2>

<br>


<br>


<h3><a id="N2">初期設定</a></h3>

<p>とりあえずこまごま設定です。iptablesとかselinuxとかoffってるけど構築途中ということで勘弁！</p>

<p>```</p>

<h1>yum groupinstall "Base"</h1>

<h1>yum update</h1>

<h1>yum install sudo git</h1>

<h1>echo "xxxx ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/xxxx</h1>

<h1>chmod 400 /etc/sudoers.d/xxxx</h1>

<h1>sed -ie "s/SELINUX=enforcing/SELINUX=disabled/" /etc/selinux/config</h1>

<h1>chkconfig iptables off</h1>

<h1>chkconfig ip6tables off</h1>

<h1>chkconfig cpuspeed off</h1>

<h1>echo "NETWORKING_IPV6=no" >> /etc/sysconfig/network</h1>

<h1>echo "options ipv6 disable=1" > /etc/modprobe.d/disable-ipv6.conf</h1>

<h1>sed -ie 's/NM_CONTROLLED="yes"/NM_CONTROLLED="no"/' /etc/sysconfig/network-scripts/ifcfg-eth0</h1>

<h1>echo -e "nameserver 210.157.1.171\nnameserver 8.8.8.8" > /etc/resolv.conf</h1>

<h1>sed -ie "s/server 0.centos.pool.ntp.org/server ntp.nict.jp/" /etc/ntp.conf</h1>

<h1>sed -ie "s/server 1.centos.pool.ntp.org/server ntp1.jst.mfeed.ad.jp/" /etc/ntp.conf</h1>

<h1>sed -ie "s/server 2.centos.pool.ntp.org/server ntp2.jst.mfeed.ad.jp/" /etc/ntp.conf</h1>

<h1>chkconfig ntpd on</h1>

<h1>chkconfig ntpdate on</h1>

<h1>su - xxxx</h1>

<p>$ vim .vimrc</p>

<h1>reboot</h1>

<p>```</p>

<p>``` sh .vimrc
syntax on
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8,iso-2022-jp,euc-jp,ucs-2,cp932,sjis
set tabstop=2
set autoindent
set expandtab
set shiftwidth=2
set ignorecase
set showmatch
set showmode
set title
highlight JpSpace cterm=underline ctermfg=darkblue guifg=darkblue
match JpSpace /　/</p>

<h2>```</h2>

<br>


<br>


<p>ここからは項目通りにインストールしていくだけです。</p>

<h3><a id="N3">rbenv install</a></h3>

<p>自分の記事まんま(´ω`)<br/>
<a href="http://blog.youyo.info/blog/2013/01/21/rbenv-all-users/">http://blog.youyo.info/blog/2013/01/21/rbenv-all-users/</a></p>

<p>``` sh</p>

<h1>cd /usr/local/src/</h1>

<h1>wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</h1>

<h1>rpm -ivh epel-release-6-8.noarch.rpm</h1>

<h1>sed -ie "s/enabled=1/enabled=0/" /etc/yum.repos.d/epel.repo</h1>

<h1>cd /usr/local/</h1>

<h1>git clone git://github.com/sstephenson/rbenv.git rbenv</h1>

<h1>mkdir rbenv/{shims,versions}</h1>

<h1>git clone git://github.com/sstephenson/ruby-build.git ruby-build</h1>

<h1>cd ruby-build/</h1>

<h1>./install.sh</h1>

<h1>echo 'export RBENV_ROOT="/usr/local/rbenv"' > /etc/profile.d/rbenv.sh</h1>

<h1>echo 'export PATH="/usr/local/rbenv/bin:$PATH"' >> /etc/profile.d/rbenv.sh</h1>

<h1>echo 'eval "$(rbenv init -)"' >> /etc/profile.d/rbenv.sh</h1>

<h1>. /etc/profile.d/rbenv.sh</h1>

<h1>yum install make gcc kernel-devel zlib-devel openssl-devel readline-devel curl-devel sqlite-devel libyaml-devel --enablerepo=epel</h1>

<h1>rbenv install 1.9.3-p385</h1>

<h1>rbenv global 1.9.3-p385</h1>

<h1>rbenv rehash</h1>

<h1>gem install bundler</h1>

<h2>```</h2>

<br>


<br>


<h3><a id="N4">dnsmasq2.48 install</a></h3>

<p>自分の記事まんま2(´ω`)<br/>
<a href="http://blog.youyo.info/blog/2013/01/24/dnsmasq/">http://blog.youyo.info/blog/2013/01/24/dnsmasq/</a></p>

<p><code>
sudo yum install dnsmasq
sudo vim /etc/resolv.conf
sudo /etc/init.d/dnsmasq start
sudo chkconfig dnsmasq on
</code></p>

<p>``` sh resolv.conf
nameserver 127.0.0.1
nameserver 210.157.1.171
nameserver 8.8.8.8</p>

<h2>```</h2>

<br>


<br>


<h3><a id="N5">mysql5.6 install</a></h3>

<p>こちらのサイト様を参考に(´ω`)<br/>
<a href="http://d.hatena.ne.jp/akishin999/20130207/1360241401">http://d.hatena.ne.jp/akishin999/20130207/1360241401</a></p>

<p><code>sh
sudo mkdir /usr/local/src/mysql5.6/
cd /usr/local/src/mysql5.6/
sudo wget http://dev.mysql.com/get/Downloads/MySQL-5.6/MySQL-shared-5.6.10-1.el6.x86_64.rpm/from/http://cdn.mysql.com/
sudo wget http://dev.mysql.com/get/Downloads/MySQL-5.6/MySQL-shared-compat-5.6.10-1.el6.x86_64.rpm/from/http://cdn.mysql.com/
sudo wget http://dev.mysql.com/get/Downloads/MySQL-5.6/MySQL-server-5.6.10-1.el6.x86_64.rpm/from/http://cdn.mysql.com/
sudo wget http://dev.mysql.com/get/Downloads/MySQL-5.6/MySQL-client-5.6.10-1.el6.x86_64.rpm/from/http://cdn.mysql.com/
sudo wget http://dev.mysql.com/get/Downloads/MySQL-5.6/MySQL-devel-5.6.10-1.el6.x86_64.rpm/from/http://cdn.mysql.com/
sudo yum localinstall MySQL-*
sudo /etc/init.d/mysql start
mysql -u root -p
mysql&gt; SET PASSWORD FOR root@localhost=PASSWORD('password');
sudo mysql_secure_installation
sudo ln -s /usr/my.cnf /etc/
sudo vim /etc/my.cnf
sudo mkdir /var/run/mysqld
sudo chown mysql /var/run/mysqld/
sudo mkdir /var/log/mysqld
sudo chown mysql:mysql /var/log/mysqld
sudo /etc/init.d/mysql restart
</code></p>

<p>``` sh my.cnf
[mysqld]
datadir                 = /var/lib/mysql
socket                  = /var/lib/mysql/mysql.sock
pid-file                = /var/run/mysqld/mysqld.pid
character-set-server    = utf8
skip-character-set-client-handshake</p>

<p>log-error               = /var/log/mysqld/mysqld-error.log
general_log             = 1
general_log_file        = /var/log/mysqld/mysql.log
slow_query_log          = 1
slow_query_log_file     = /var/log/mysqld/slow.log</p>

<p>log-bin                 = mysql-bin
binlog_format           = mixed
expire_logs_days        = 30
server-id               = 1</p>

<p>innodb_file_per_table
innodb_flush_log_at_trx_commit = 0
innodb_flush_method     = O_DIRECT
innodb_buffer_pool_size = 256M
innodb_log_file_size    = 128M
innodb_log_buffer_size  = 8M</p>

<p>query_cache_type        = 1
query_cache_size        = 64M
key_buffer_size         = 32M
sort_buffer_size        = 1M
read_buffer_size        = 1M
read_rnd_buffer_size    = 4M</p>

<p>sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</p>

<p>[mysqld_safe]
log-error               = /var/log/mysqld/mysqld_safe-error.log
pid-file                = /var/run/mysqld/mysqld.pid
character-set-server    = utf8</p>

<h2>```</h2>

<br>


<br>


<h3><a id="N6">php5.4 install</a></h3>

<p>php54.specファイルを少しいじっています(´ω`)</p>

<p>``` sh
sudo yum groupinstall "Development tools"
sudo yum install bzip2-devel db4-devel gmp-devel httpd-devel pam-devel libedit-devel libtool-ltdl-devel libc-client-devel cyrus-sasl-devel openldap-devel postgresql-devel unixODBC-devel libxml2-devel firebird-devel net-snmp-devel libxslt-devel libjpeg-devel libpng-devel freetype-devel libXpm-devel t1lib-devel libmcrypt-devel libtidy-devel libtidy-devel freetds-devel aspell-devel recode-devel libicu-devel enchant-devel --enablerepo=epel
sudo useradd rpmdevel
su - root
su - rpmdevel
mkdir -p ~/rpm/{BUILD,SRPMS,SPECS,SOURCES,RPMS}
echo "%_topdir $HOME/rpm" > $HOME/.rpmmacros
mkdir src
cd src/
wget http://rpms.famillecollet.com/SRPMS/php-5.4.11-1.remi.src.rpm
rpm -ivh php-5.4.11-1.remi.src.rpm
cd ../rpm/SPECS/
sed -ie "s/mysql-devel/MySQL-devel/" php54.spec</p>

<h2>vim php54.spec</h2>

<h1>%global mysql_config %{_libdir}/mysql/mysql_config</h1>

<h2>%global mysql_config /usr/bin/mysql_config</h2>

<p>rpmbuild -v -ba --clean php54.spec
logout
cd /home/rpmdevel/rpm/RPMS/x86_64/
yum localinstall php-5.4.11-1.el6.x86_64.rpm php-cli-5.4.11-1.el6.x86_64.rpm php-common-5.4.11-1.el6.x86_64.rpm php-devel-5.4.11-1.el6.x86_64.rpm php-fpm-5.4.11-1.el6.x86_64.rpm php-gd-5.4.11-1.el6.x86_64.rpm php-mbstring-5.4.11-1.el6.x86_64.rpm php-mcrypt-5.4.11-1.el6.x86_64.rpm php-mysql-5.4.11-1.el6.x86_64.rpm php-pdo-5.4.11-1.el6.x86_64.rpm php-snmp-5.4.11-1.el6.x86_64.rpm php-xml-5.4.11-1.el6.x86_64.rpm php-xmlrpc-5.4.11-1.el6.x86_64.rpm</p>

<h2>```</h2>

<br>


<br>


<h3><a id="N7">nginx1.2.6 install</a></h3>

<p>適当にインストール(´ω`)</p>

<p><code>
sudo vim /etc/yum.repos.d/nginx.repo
sudo yum install nginx --enablerepo=nginx
</code></p>

<p>``` sh nginx.repo
[nginx]
name=nginx repo
baseurl=http://nginx.org/packages/rhel/$releasever/$basearch/
gpgcheck=0
enabled=0</p>

<h2>```</h2>

<br>


<br>


<h3><a id="N8">postfix2.9.5+VDAパッチ install</a></h3>

<p>VDAパッチ当てるのとmysql対応させるためにspecファイルいじってます(´ω`)</p>

<p>``` sh
sudo yum install pcre-devel
su - rpmdevel
cd src/
wget http://download.imt-systems.com/postfix/2.9.5/x86_64/postfix-2.9.5-1.el6.src.rpm
wget http://vda.sourceforge.net/VDA/postfix-vda-v11-2.9.5.patch
rpm -ivh postfix-2.9.5-1.el6.src.rpm
mv postfix-vda-v11-2.9.5.patch ../rpm/SOURCES/
cd ../rpm/SPECS/
sed -ie "s/%bcond_without mysql/%bcond_with mysql/" postfix.spec
sed -ie "s/mysql-devel/MySQL-devel/" postfix.spec</p>

<h2>vim postfix.spec</h2>

<p>Release: 1_VDA_%{?dist}
Epoch: 3
Patch12: postfix-vda-v11-2.9.5.patch</p>

<h2>%patch12 -p1 -b .VDA</h2>

<p>rpmbuild -v -ba --clean postfix.spec
logout
cd /home/rpmdevel/rpm/RPMS/x86_64/
yum localinstall postfix-2.9.5-1_VDA_.el6.x86_64.rpm</p>

<h2>```</h2>

<br>


<br>


<h3><a id="N9">dovecot2.0.9 install</a></h3>

<p>適当にインス(ry</p>

<p>``` sh
sudo yum install dovecot dovecot-mysql</p>

<h2>```</h2>

<br>


<br>


<ul>
<li>インストールだけしました。</li>
<li>ちゃんとした設定はあとで。</li>
<li><s>作成したrpmはなくさないようにあとで公開予定(未定)</s></li>
</ul>


<p>置きました！<br/>
<a href="http://download.youyo.info/Linux/centos/6/x86_64/RPM/">http://download.youyo.info/Linux/centos/6/x86_64/RPM/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS上にzabbix-server構築してみた (Nginx + php-fpm)]]></title>
    <link href="http://blog.youyo.info/blog/2013/01/29/zabbix-on-aws/"/>
    <updated>2013-01-29T10:32:00+09:00</updated>
    <id>http://blog.youyo.info/blog/2013/01/29/zabbix-on-aws</id>
    <content type="html"><![CDATA[<p>Nginx + php-fpmの勉強をしたくて構築してみました。<br/>
最終的にはそれ以外のことに費やした時間のほうが長くなりましたが...<br/>
メモ書きなのでつらつらと書いていきます。<br/>
　<br/>
※かなりの長文になってしまいました...</p>

<h2>環境</h2>

<ul>
<li>Amazon Linux (3.2.34-55.46.amzn1.x86_64)</li>
<li>zabbix 2.0.4</li>
<li>mysql 5.5.27</li>
<li>nginx 1.2.6</li>
<li>php 5.3.20</li>
</ul>


<h2>やったこと</h2>

<ol>
<li>RDSセットアップ</li>
<li>zabbix-2.0のrpm作成</li>
<li>zabbix インストール</li>
<li>Nginx + php-fpm インストール</li>
<li><s>SESでアラートメール送信設定</s> ←力尽きました... あとでやります。</li>
</ol>


<p>※ <a href="http://blog.youyo.info/blog/2013/01/29/zabbix-on-aws/">続き</a>書きました！</p>

<!--more-->


<h2>RDSセットアップ</h2>

<p>ec2にmysql入れてもいいのですが、せっかくなのでRDS使用してみます。</p>

<ul>
<li>AWS Management ConsoleからDB Parameter Group 作成</li>
</ul>


<p><img src="http://cloudfront.youyo.info/2013-01-29-zabbix-on-aws/create_rds_prm2.png" alt="create_rds_prm" /></p>

<ul>
<li>文字コードをutf-8に修正。CLIでズババッと。<a href="http://d.hatena.ne.jp/deeeki/20110606/rds_modify_db_parameter_group">こちら</a>を参考に。</li>
</ul>


<p><code>
mkdir aws
cd aws/
wget http://s3.amazonaws.com/rds-downloads/RDSCli.zip
unzip RDSCli.zip
cd RDSCli-1.12.001/
echo "AWSAccessKeyId=********" &gt; credential-file-path.txt
echo "AWSSecretKey=********" &gt;&gt; credential-file-path.txt
echo "export AWS_RDS_HOME=/home/ec2-user/aws/RDSCli-1.12.001" &gt;&gt; ~/.bashrc
echo "export PATH=/home/ec2-user/aws/RDSCli-1.12.001/bin:$PATH" &gt;&gt; ~/.bashrc
echo "export EC2_REGION=ap-northeast-1" &gt;&gt; ~/.bashrc
echo "export AWS_CREDENTIAL_FILE=/home/ec2-user/aws/RDSCli-1.12.001/credential-file-path.txt" &gt;&gt; ~/.bashrc
source ~/.bashrc
rds-describe-db-parameter-groups
rds-modify-db-parameter-group zabbix20 -p "name=character_set_client, value=utf8, method=immediate"
rds-modify-db-parameter-group zabbix20 -p "name=character_set_connection, value=utf8, method=immediate"
rds-modify-db-parameter-group zabbix20 -p "name=character_set_database, value=utf8, method=immediate"
rds-modify-db-parameter-group zabbix20 -p "name=character_set_results, value=utf8, method=immediate"
rds-modify-db-parameter-group zabbix20 -p "name=character_set_server, value=utf8, method=immediate"
</code></p>

<ul>
<li>DBインスタンス作成して接続確認</li>
</ul>


<p>こんな感じで適当に作成。</p>

<p><img src="http://cloudfront.youyo.info/2013-01-29-zabbix-on-aws/create_db-instance2.png" alt="create_db-instance" /></p>

<p>接続して文字コードチェック。</p>

<p><code>
sudo yum install mysql
mysql -u USER -h ********.ap-northeast-1.rds.amazonaws.com -p DATABASE
Enter password:
ERROR 2003 (HY000): Can't connect to MySQL server on '********.ap-northeast-1.rds.amazonaws.com' (110)
</code></p>

<p>DB Security Groupsの設定が抜けていました。。。<br/>
設定して再チャレンジ！</p>

<p><code>
mysql -u USER -h ********.ap-northeast-1.rds.amazonaws.com -p DATABASE
mysql&gt; SHOW VARIABLES LIKE 'character_set%';
+--------------------------+-------------------------------------------+
| Variable_name            | Value                                     |
+--------------------------+-------------------------------------------+
| character_set_client     | utf8                                      |
| character_set_connection | utf8                                      |
| character_set_database   | latin1                                    |
| character_set_filesystem | binary                                    |
| character_set_results    | utf8                                      |
| character_set_server     | utf8                                      |
| character_set_system     | utf8                                      |
| character_sets_dir       | /rdsdbbin/mysql-5.5.27.R1/share/charsets/ |
+--------------------------+-------------------------------------------+
</code></p>

<p>えぇ〜！(ﾉω＜；)<br/>
databaseどうした...<br/>
設定抜けた？ 再設定してもう１回...</p>

<p><code>
rds-modify-db-parameter-group zabbix20 -p "name=character_set_database, value=utf8, method=immediate"
mysql&gt; SHOW VARIABLES LIKE 'character_set%';
+--------------------------+-------------------------------------------+
| Variable_name            | Value                                     |
+--------------------------+-------------------------------------------+
| character_set_client     | utf8                                      |
| character_set_connection | utf8                                      |
| character_set_database   | latin1                                    |
| character_set_filesystem | binary                                    |
| character_set_results    | utf8                                      |
| character_set_server     | utf8                                      |
| character_set_system     | utf8                                      |
| character_sets_dir       | /rdsdbbin/mysql-5.5.27.R1/share/charsets/ |
+--------------------------+-------------------------------------------+
</code></p>

<p>ぐぬぬ。。。 とりあえずrebootしてみる。<br/>
→ダメでした。。。<br/>
→<a href="http://www.teps4545.com/2010/01/amazon-rds.html">こちら</a>のサイト様を参考に解決しました！</p>

<p><code>
mysql&gt; alter database DATABASE default character set utf8;
mysql&gt; SHOW VARIABLES LIKE 'character_set%';
+--------------------------+-------------------------------------------+
| Variable_name            | Value                                     |
+--------------------------+-------------------------------------------+
| character_set_client     | utf8                                      |
| character_set_connection | utf8                                      |
| character_set_database   | utf8                                      |
| character_set_filesystem | binary                                    |
| character_set_results    | utf8                                      |
| character_set_server     | utf8                                      |
| character_set_system     | utf8                                      |
| character_sets_dir       | /rdsdbbin/mysql-5.5.27.R1/share/charsets/ |
+--------------------------+-------------------------------------------+
</code></p>

<h2>zabbix-2.0のrpm作成</h2>

<p>zabbix-2.0のrpm作成します。<br/>
参考サイト様は<a href="http://d.hatena.ne.jp/zabbio/20120606/1338941328">こちら</a>。</p>

<ul>
<li>必要なパッケージ類のインストール</li>
</ul>


<p><code>
git clone https://github.com/atanaka7/zabbix-jp-amzn1.git
sudo yum update
sudo yum groupinstall 'Development tools'
sudo yum install mysql-devel net-snmp-devel openldap-devel sqlite-devel unixODBC-devel libssh2-devel java-devel curl-devel OpenIPMI-devel mysql postgresql-devel
sudo rpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
sudo sed -ie "s/\$releasever/6/g" /etc/yum.repos.d/remi.repo
sudo yum install php-cli php-mbstring php-common php-mysql php-xml php php-pdo php-gd php-bcmath --enablerepo=remi
cd /usr/local/src/
sudo wget http://www.zabbix.jp/binaries/relatedpkgs/rhel6/x86_64/fping-2.4b2-16.el6.JP.x86_64.rpm
sudo wget http://www.zabbix.jp/binaries/relatedpkgs/rhel6/x86_64/iksemel-1.4-2.el6.JP.x86_64.rpm
sudo wget http://www.zabbix.jp/binaries/relatedpkgs/rhel6/x86_64/iksemel-devel-1.4-2.el6.JP.x86_64.rpm
sudo yum localinstall fping-2.4b2-16.el6.JP.x86_64.rpm iksemel-1.4-2.el6.JP.x86_64.rpm iksemel-devel-1.4-2.el6.JP.x86_64.rpm
</code></p>

<ul>
<li>rpmbuild</li>
</ul>


<p><code>
mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
echo "%_topdir $HOME/rpmbuild" &gt; ~/.rpmmacros
echo "%_builddir %{_topdir}/BUILD" &gt;&gt; ~/.rpmmacros
echo "%_rpmdir %{_topdir}/RPMS" &gt;&gt; ~/.rpmmacros
echo "%_sourcedir %{_topdir}/SOURCES" &gt;&gt; ~/.rpmmacros
echo "%_specdir %{_topdir}/SPECS" &gt;&gt; ~/.rpmmacros
echo "%_srcrpmdir %{_topdir}/SRPMS" &gt;&gt; ~/.rpmmacros
rpmbuild --rebuild zabbix-2.0.4-1.amzn1.src.rpm
</code></p>

<h2>zabbix インストール</h2>

<ul>
<li>rpm インストール</li>
</ul>


<p><code>
cd ~/rpmbuild/RPMS/x86_64/
sudo yum localinstall zabbix-2.0.4-1.amzn1.x86_64.rpm zabbix-server-2.0.4-1.amzn1.x86_64.rpm \
zabbix-server-mysql-2.0.4-1.amzn1.x86_64.rpm zabbix-web-mysql-2.0.4-1.amzn1.x86_64.rpm \
zabbix-agent-2.0.4-1.amzn1.x86_64.rpm ../noarch/zabbix-web-2.0.4-1.amzn1.noarch.rpm
</code></p>

<ul>
<li>データベース設定</li>
</ul>


<p><code>
cd /usr/share/doc/zabbix-server-2.0.4/database/mysql/
sudo cat schema.sql |mysql -u USER -h ********.ap-northeast-1.rds.amazonaws.com -p DATABASE
sudo cat images.sql |mysql -u USER -h ********.ap-northeast-1.rds.amazonaws.com -p DATABASE
sudo cat data.sql |mysql -u USER -h ********.ap-northeast-1.rds.amazonaws.com -p DATABASE
</code></p>

<ul>
<li>Zabbix-Server設定</li>
</ul>


<p><code>/etc/zabbix/zabbix_server.conf</code>の修正点のみつらつらと...</p>

<p><code>
DBHost=********.ap-northeast-1.rds.amazonaws.com
DBName=MYSQL_DB
DBUser=MYSQL_USER
DBPassword=MYSQL_PW
</code></p>

<ul>
<li>Zabbix-Server起動</li>
</ul>


<p>エラーなければok.</p>

<p><code>
sudo /etc/init.d/zabbix-server start
</code></p>

<h2>Nginx + php-fpm インストール</h2>

<ul>
<li>インストール手順</li>
</ul>


<p><code>
sudo yum install nginx php php-fpm php-devel php-cli php-xml php-mysql php-mbstring php-gd --enablerepo=remi
cd /etc/nginx/
sudo vim /etc/php.ini
sudo vim /etc/php-fpm.d/php_zabbix.conf
sudo vim nginx.conf
sudo vim conf.d/nginx_zabbix.conf
sudo mkdir /var/log/nginx/zabbix/
sudo mkdir /var/www/nginx
sudo ln -s /usr/share/zabbix /var/www/nginx/zabbix
sudo /etc/init.d/php-fpm start
sudo nginx -t
sudo /etc/init.d/nginx start
</code></p>

<ul>
<li>各種設定ファイル</li>
</ul>


<p><div><script src='https://gist.github.com/4662274.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p><div><script src='https://gist.github.com/4662301.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p><div><script src='https://gist.github.com/4662318.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p><div><script src='https://gist.github.com/4662327.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<ul>
<li>Nginx,php-fpm起動</li>
</ul>


<p>起動時にエラーがなく、http://domain/zabbixにアクセスしてこんな画面が出ればok. あとは画面の指示に従ってインストール！<br/>
何かおかしいときは画面上部に赤字でエラー内容が出るのでそれを参考に修正。</p>

<p><code>
sudo /etc/init.d/php-fpm start
sudo /etc/init.d/nginx start
sudo chown nginx:nginx /etc/zabbix/zabbix.conf.php
</code></p>

<p><img src="http://cloudfront.youyo.info/2013-01-29-zabbix-on-aws/zabbix_web.png" alt="zabbix_web" /></p>

<h2>とりあえず完成！</h2>

<ul>
<li>完全に複数の記事に分けるべきでした。</li>
<li>構築しながらブログ書いて疲れました。</li>
<li>SESでアラートメール送信は後日やります。。。</li>
</ul>


<p>※ <a href="http://blog.youyo.info/blog/2013/01/29/zabbix-on-aws/">続き</a>はこちら！</p>

<p><img src="http://cloudfront.youyo.info/2013-01-29-zabbix-on-aws/zabbix_web2.png" alt="zabbix_web2" /></p>
]]></content>
  </entry>
  
</feed>
